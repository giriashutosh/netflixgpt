Features
 -SignIn/SignUp
 Browse(with authentication)
  -Header
  -Movie
   -title
   -description
   -movie container
     -movieSuggestion * N
 -chatGPt
    -search

If we have a big form then we should use formik for the validation.

Done.
-Header
-Routing of App.
-Login Form.
-Sign Up Form.
-authentication using firebase
-Sign out 
-update profile api.

Need to be done 
//Form validation.
//UseRef.
//preventDefault
//authentication
//firebase setup.

//create redux to store user.
//Sign out.
//Update Profile API.

//fix the bug of authentication issue.
//unsubscribe authstatechange
/create constant file for constant things. (api options also)
//get the movie data from tmdb api, go and sign in and get the api key, api read access token.
//create movie slice.
//create custom hook for fetch data newMovies and trailer videos also.
//use redux for storing video trailer data in the movie slice.
Note:-  Everything happen two times because of strict mode to check inconsistency of react.

MainContainer.
  -videoBackground.
  -videoTitle.
secondaryContainer
  -moviesList * n;
    -cards * n;

Need to be done
 1.create GPT search features.
 add gpt button in the header.
 add GptSearch.js
 add new slices for gpt search(gptSlice: showGptSearchslice, addGptMovieResults({moviesName:"", movies: ""}))
 GptSearch will contain search bar or GptSearchSuggestions
 implement language translator
 create lan constant
 store language record in redux
 create supported language array in the constant file.
 create configSlice 
 language options only shown when GptSearch is true.
 GptSearch should also change to home page
 go to platform.openAi.com login there and get secret key add into the constant file.
 add npm openAi
 create openai.js in the utils folder.
 create handleClickSearch function use openai to get suggestions and then create another helper function to get movies data on the basis
 of queries present in the suggestion array.
 create .env file for all the secret keys like REACT_APP_OPENAI_KEY
 for access use process.env.REACT_APP_OPENAI_KEY
 put the .env file in the gitignore and push all the env variable while deployment
 use concept of memoization to reduce api call for movies data because everytime we switch between the pages the api will call again and again
 but we have already the data in our store.
 